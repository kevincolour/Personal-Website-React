{"version":3,"sources":["components/Contact/WordGenerator.js","pages/Index.js"],"names":["messages","WordGenerator","useState","idx","updateIter","message","updateMessage","length","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","map","value","sort","Math","random","a","b","slice","className","style","onMouseEnter","onMouseLeave","Index","Main","description","data-testid","to"],"mappings":"yLAEIA,EAAW,CACb,iBACA,eACA,qBACA,4BACA,sBACA,sCACA,+BACA,kCACA,2BACA,0BACA,sBACA,uBACA,uBACA,2BACA,oBA8DaC,EAzCO,WACpB,IAD0B,EAIAC,mBAAS,GAJT,mBAInBC,EAJmB,KAIdC,EAJc,OAKOF,mBAASF,EAASG,IALzB,mBAKnBE,EALmB,KAKVC,EALU,OAMCJ,mBAASF,EAASG,GAAKI,QANxB,mBAMnBC,EANmB,KAMbC,EANa,OAOMP,oBAAS,GAPf,mBAOnBQ,EAPmB,KAOTC,EAPS,KA6B1B,OA/CkB,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAEJI,qBAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,YACbJ,GACH,OAAO,kBAAMO,cAAcF,IAE7B,OAAO,eACN,CAACL,IAYJQ,EAAY,WACV,IAAIC,EAASnB,EACToB,EAAUf,EACVA,EAXO,IAWQR,EAASG,GAAKI,SAC/Be,GAAU,EACVC,EAAU,GAERD,IAAWtB,EAASO,SACtBe,EAAS,EACTtB,EAAWA,EACRwB,KAAI,SAACC,GAAD,MAAY,CAAEA,QAAOC,KAAMC,KAAKC,aACpCF,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEH,KAAOI,EAAEJ,QAC1BF,KAAI,qBAAGC,UAGZnB,EAAcN,EAASsB,GAAQS,MAAM,EAAGR,IACxCnB,EAAWkB,GACXb,EAAWc,EAAU,KACpBb,EAzBW,IAyBQ,MAGpB,sBACEsB,UAAU,mBACVC,MAAO,GACPC,aAAc,kBAAMvB,GAAY,IAChCwB,aAAc,kBAAOhC,EAAMH,EAASO,QAAWI,GAAY,IAJ7D,SAME,+BAAON,OC7CE+B,UAvBD,kBACZ,cAACC,EAAA,EAAD,CACEC,YAAa,kBADf,SAGE,0BAASN,UAAU,OAAOd,GAAG,QAA7B,UACE,iCACE,sBAAKc,UAAU,QAAf,UACE,oBAAIO,cAAY,UAAhB,SAA0B,cAAC,IAAD,CAAMC,GAAG,IAAT,qBAC1B,oFAC0D,cAAC,EAAD,YAI9D,uFAAyD,cAAC,IAAD,CAAMA,GAAG,SAAT,sBAAzD,6BAC2B,IACzB,cAAC,IAAD,CAAMA,GAAG,UAAT,oBAFF,KAEqC,OACnC,cAAC,IAAD,CAAMA,GAAG,mBAAT","file":"static/js/12.689df290.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nlet messages = [\n  'the bees knees',\n  'a spicy taco',\n  'the prime meridian',\n  'a good time at the movies',\n  'your best nightmare',\n  'the space between dream and reality',\n  'a solution to climate change',\n  'the neighbours golden retriever',\n  'a long walk on the beach',\n  'random thoughts of mine',\n  'your favourite deli',\n  'an internet argument',\n  'fantastical delirium',\n  'random thoughts of yours',\n  'an infinite loop',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst WordGenerator = () => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 100; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(messages[idx].length); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n    if (newIdx === messages.length) {\n      newIdx = 0;\n      messages = messages\n        .map((value) => ({ value, sort: Math.random() }))\n        .sort((a, b) => a.sort - b.sort)\n        .map(({ value }) => value);\n    }\n\n    updateMessage(messages[newIdx].slice(0, newChar));\n    updateIter(newIdx);\n    updateChar(newChar + 1);\n  }, isActive ? delay : null);\n\n  return (\n    <span\n      className=\"inline-container\"\n      style={{}}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n    >\n      <span>{message}</span>\n    </span>\n  );\n};\n\nexport default WordGenerator;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport WordGenerator from '../components/Contact/WordGenerator';\n\nconst Index = () => (\n  <Main\n    description={\"Kevin's Website\"}\n  >\n    <article className=\"post\" id=\"index\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"/\">Hello</Link></h2>\n          <p>\n            Not sure what this is yet, but it&apos;s definitely not <WordGenerator />\n          </p>\n        </div>\n      </header>\n      <p> Welcome to my website. Please feel free to read more <Link to=\"/about\">about me</Link>,\n        or you can check out my {' '}\n        <Link to=\"/resume\">resume</Link>, {' or '}\n        <Link to=\"/Recommendations\"> recommendations </Link>\n      </p>\n\n    </article>\n  </Main>\n);\n\nexport default Index;\n"],"sourceRoot":""}